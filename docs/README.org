#+title: ChaOS - "Charlie's OS"

* Overview

This is a rudimentary OS meant for as a project submission for the
CSCE 4326 - OS class.

* Team Members

Charlie Suarez is the sole author of this project.

* How to Build

Required programs to build:
- Compiler
  - GCC/Clang for Linux/macOS
  - MSVC for Windows
- CMake
- Ninja (if on Linux)

The usual CMake commands will build the project:

#+begin_src bash
mkdir build && cd build
cmake ..
cmake --build . --parallel
#+end_src

* How to Run

To boot the operating system:

#+begin_src bash
# For Linux/macOS:

# To run all workloads:
./scripts/run.sh --all

# To run a specific workload (1-3):
./scripts/run.sh --workload 1
#+end_src

#+begin_src powershell
# For Windows:

# To run all workloads:
./scripts/run.ps1 -All

# To run a specific workload (1-3):
./scripts/run.ps1 -Workload 1
#+end_src

* How to Use

The OS will start with a boot message.

Then, it will prompt the user for a username and password. The
hardcoded username is "root" and the password is "toor".

The user will be given three attempts. If all three attempts are
exhausted, the OS will shut down.

Once authenticated, a command prompt will be initiated.

* About Workloads

A workload is formatted as follows (each bullet point is in a new
line):
- *Workload ID* - an unsigned integer
- *Process IDs* - the character 'p' followed by a space-separated list
  of unsigned integers representing process IDs to be created
- *Instructions* - the character 'i' followed by a newline-separated
  list of instructions:
  - "allocate <process-id> <size>" - Allocates memory for a
    process. This will create (size)/(4 KB) pages for a given process.
  - "read <process-id> <address>" - Performs virtual address
    translation and reads from physical memory.
  - "write <process-id> <address> <int>" - Performs virtual address
    translation and writes an integer to physical memory.
